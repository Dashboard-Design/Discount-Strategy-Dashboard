# This file generated by Quarto; do not edit by hand.
# shiny_mode: core

from __future__ import annotations

from pathlib import Path
from shiny import App, Inputs, Outputs, Session, ui

import pandas as pd
from great_tables import GT, style, loc
from shiny import App, render, reactive, ui
import numpy as np
from components.table_logic import summary
from components.table_visual import table_display
from datetime import datetime
import io

# Load dataset
df = pd.read_excel("dataset/sample_-_superstore.xls")
current_date = df["Order Date"].max().strftime("%b %d, %Y")
df["Year"] = pd.to_datetime(df["Order Date"]).dt.year.astype(str)


# Get unique values for filters
region_options = ["All"] + sorted(df["Region"].dropna().unique())
year_options = sorted(df["Year"].dropna().unique())
year_options = year_options[1:]

# ========================================================================




def server(input: Inputs, output: Outputs, session: Session) -> None:
    # Region filter with "All" default
    ui.input_select(
        "region", 
        "Region:", 
        choices=region_options, 
        selected=region_options[0]
    )

    # Year filter (latest by default)
    ui.input_select(
        "year", 
        "Year:", 
        choices=year_options, 
        selected=year_options[-1]
    )

    # Company goal
    ui.input_radio_buttons(
        "company_goal", 
        "Goal:", 
        choices=["Revenue Growth", "Profit Protection", "Market Share Expansion", "Customer Retention"], 
        selected="Revenue Growth",
    )

    # Customer priority
    ui.input_radio_buttons(
        "customer_priority", 
        "Priority:", 
        choices=["New Customers", "Loyal Customers", "High-Value Accounts", "All Segments"], 
        selected="New Customers"
    )

    ui.HTML(f"""
    <div class="more-info">
        <div style="margin-bottom: 10px;">
            <span style="font-weight: 600;">Data last updated:</span><br>
            {current_date}
        </div>
        <div>
            <span style="font-weight: 600;">Developed by:</span><br>
            Sajjad Ahmadi
        </div>
    </div>
    """)


    @reactive.Calc
    def filtered():
        f = df[df["Year"] == input.year()]
        if input.region() != "All":
            f = f[f["Region"] == input.region()]
        return f

    @reactive.Calc
    def table_logic():
        return summary(df, filtered(), input.year(), input.region(), input.company_goal(), input.customer_priority()  )

    @render.download(filename=lambda: f"export_{input.region()}_{input.year()}.csv")
    def navbar_download():
        # Build the numeric summary from the same reactive filtered data
        f = table_logic()                      
        if f.empty:
            yield "No data available"
            return

        export_df = (f)

        # Return CSV text (strings yielded will be encoded as UTF-8)
        buf = io.StringIO()
        export_df.to_csv(buf, index=False)
        yield buf.getvalue()

    # ========================================================================

    @render.ui
    def render_table_ui():
        df_sum = table_logic()
        return table_display(df_sum, input.year(), input.region())

    # ========================================================================



    return None


_static_assets = ["Dashboard_files","logo3.png","Dashboard_files\\libs\\quarto-html\\tippy.css","Dashboard_files\\libs\\quarto-html\\quarto-syntax-highlighting-dc55a5b9e770e841cd82e46aadbfb9b0.css","Dashboard_files\\libs\\quarto-html\\quarto-syntax-highlighting-dark-b651517ce65839d647a86e2780455cfb.css","Dashboard_files\\libs\\bootstrap\\bootstrap-icons.css","Dashboard_files\\libs\\bootstrap\\bootstrap-7bdf1c8e8f98638fa310f44532f0922b.min.css","Dashboard_files\\libs\\bootstrap\\bootstrap-dark-7bdf1c8e8f98638fa310f44532f0922b.min.css","styles.css","Dashboard_files\\libs\\clipboard\\clipboard.min.js","Dashboard_files\\libs\\quarto-html\\quarto.js","Dashboard_files\\libs\\quarto-html\\tabsets\\tabsets.js","Dashboard_files\\libs\\quarto-html\\axe\\axe-check.js","Dashboard_files\\libs\\quarto-html\\popper.min.js","Dashboard_files\\libs\\quarto-html\\tippy.umd.min.js","Dashboard_files\\libs\\quarto-html\\anchor.min.js","Dashboard_files\\libs\\bootstrap\\bootstrap.min.js","Dashboard_files\\libs\\quarto-dashboard\\quarto-dashboard.js","Dashboard_files\\libs\\quarto-dashboard\\stickythead.js","Dashboard_files\\libs\\quarto-dashboard\\web-components.js","Dashboard_files\\libs\\quarto-dashboard\\components.js"]
_static_assets = {"/" + sa: Path(__file__).parent / sa for sa in _static_assets}

app = App(
    Path(__file__).parent / "Dashboard.html",
    server,
    static_assets=_static_assets,
)
