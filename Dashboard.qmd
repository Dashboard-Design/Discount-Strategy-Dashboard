---
title: "BI++"
author: ""
format: 
  dashboard:
    server: shiny
    theme: flatly
    orientation: rows
css: styles.css
---

```{python}
#| context: setup
#| include: false
import pandas as pd
from great_tables import GT, style, loc
from shiny import render, reactive, ui
import numpy as np
from components.table_logic import summary
from components.table_visual import table_display

# Load dataset
df = pd.read_excel("dataset/sample_-_superstore.xls")
df["Year"] = pd.to_datetime(df["Order Date"]).dt.year.astype(str)

# Get unique values for filters
region_options = ["All"] + sorted(df["Region"].dropna().unique())
year_options = sorted(df["Year"].dropna().unique())
```


# {.sidebar}

##### Filters:
<br>
```{python}

# Region filter with "All" default
ui.input_select(
    "region", 
    "Region:", 
    choices=region_options, 
    selected=region_options[0]
)

# Year filter (latest by default)
ui.input_select(
    "year", 
    "Year:", 
    choices=year_options, 
    selected=year_options[-1]
)

@reactive.Calc
def filtered():
    f = df[df["Year"] == input.year()]
    if input.region() != "All":
        f = f[f["Region"] == input.region()]
    return f
```

# Discount Strategy
```{python}
@reactive.Calc
def table_logic():
    return summary(df, filtered(), input.year(), input.region())

@render.ui
def render_table_ui():
    df_sum = table_logic()
    return table_display(df_sum, input.year(), input.region())
```

